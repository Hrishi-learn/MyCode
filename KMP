#include <bits/stdc++.h>
using namespace std;

void findLps(string pattern,vector<int>&lps){
    int n=pattern.size();
    int j=0;
    int i=1;
    while(i<n){
        if(pattern[i]==pattern[j]){
            lps[i]=j+1;
            i++;j++;
        }else{
            if(j){
                j=lps[j-1];
            }else{
                lps[i]=0;
                i++;
            }
        }
    }
}
vector<int>KMP(string pattern,string text){
    int n=pattern.size();
    vector<int>lps(n,0);
    findLps(pattern,lps);
    int i=0,j=0;
    int m=text.size();
    vector<int>ans;
    if(m<n){
        return ans;
    }
    while(j<m){
        if(pattern[i]==text[j]){
            i++;j++;
        }else{
            if(i){
                i=lps[i-1];
            }else{
                j++;
            }
        }
        if(i==n){
            ans.push_back(j-n);
            i=0;
            j=j-n+1;
        }
    }
    return ans;
}

int main(){
    string s,p;
    cin>>s>>p;
    vector<int>ans=KMP(p,s);
    for(int x:ans)cout<<x<<" ";

}
